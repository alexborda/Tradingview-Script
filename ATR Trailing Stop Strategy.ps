//@version=6
strategy('ATR Trailing Stop Strategy', overlay = true)

// *** Parámetros de Entrada ***
atr_length = input(14, title = 'Longitud del ATR')
atr_mult = input(1.2, title = 'ATR Multiplicador')
rsi_length = input(14, title = 'Longitud del RSI')
adx_length = input(14, title = 'Longitud del ADX')
adx_threshold = input(50, title = 'Umbral Base ADX')
adx_smoothing = input(14, title="Suavizado ADX")
vol_length = input(24, title="Longitud del Volumen")
vol_threshold = input(1.2, title="Volumen Multiplicador")
moving_avg_length = input(50, title="Longitud de Media Móvil")
trailing_mult = input(1.08, title="Trailing Stop Multiplicador")
break_even_mult = input(1.3, title="Break-Even Multiplicador")
take_profit_mult = input(2.3, title="Take Profit Multiplicador") 

// *** Selección del Tipo de Orden ***
order_type_input = input.string("limit", title="Tipo de Orden", options=["limit", "market", "stop_limit", "stop_market"])

// *** Cálculo del ATR ***
atr_value = ta.atr(atr_length)
atr_upper = close + atr_value * atr_mult
atr_lower = close - atr_value * atr_mult

// *** Cálculo del RSI ***
rsi = ta.rsi(close, rsi_length)

// *** Cálculo del ADX Dinámico ***
[diplus, diminus, adx] = ta.dmi(adx_length, adx_smoothing)

// *** Cálculo del Volumen ***
vol_avg = ta.ema(volume, vol_length)
vol_confirmed = volume > vol_avg * vol_threshold

// *** Filtro de Tendencia con Media Móvil ***
moving_avg = ta.sma(close, moving_avg_length)
trend_filter = close > moving_avg

// *** Análisis de Horarios de Mayor Volumen ***
current_hour = hour(time, "UTC")

var float best_hour_volume = na
var int best_hour = na
if bar_index > 1
    if na(best_hour_volume) or volume > best_hour_volume
        best_hour_volume := volume
        best_hour := current_hour

trade_in_high_volume_hours = na(best_hour) ? true : current_hour == best_hour

// *** Gestión de Cantidad (Qty) ***
risk_percent = input(2, title="Riesgo por operación (%)") / 100
capital = strategy.equity * risk_percent
atr_risk = atr_value * atr_mult
raw_qty = capital / atr_risk

min_qty = input(0.01, title="Cantidad mínima de orden")
max_qty = input(1.0, title="Cantidad máxima de orden")
final_qty = math.min(math.max(raw_qty, min_qty), max_qty)

can_trade = strategy.equity > (min_qty * atr_risk) and trade_in_high_volume_hours

// *** Variables Globales ***
var float price_entry = na
var bool long_break_even = false
var bool short_break_even = false
var float long_stop_price = na
var float short_stop_price = na
var float long_take_profit = na
var float short_take_profit = na

// *** Cálculo del Trailing Stop, Take Profit y Break-Even ***
if strategy.position_size > 0
    price_entry := strategy.position_avg_price
    long_stop_price := nz(long_stop_price[1], atr_lower) + atr_value * trailing_mult
    long_stop_price := math.max(long_stop_price, atr_lower)
    long_take_profit := price_entry + atr_value * take_profit_mult

    if not long_break_even and close > price_entry + atr_value * break_even_mult
        long_break_even := true
        long_stop_price := price_entry // Ajusta el stop al punto de entrada

if strategy.position_size < 0
    price_entry := strategy.position_avg_price
    short_stop_price := nz(short_stop_price[1], atr_upper) - atr_value * trailing_mult
    short_stop_price := math.min(short_stop_price, atr_upper)
    short_take_profit := price_entry - atr_value * take_profit_mult

    if not short_break_even and close < price_entry - atr_value * break_even_mult
        short_break_even := true
        short_stop_price := price_entry // Ajusta el stop al punto de entrada


// *** Condiciones de Entrada ***
entry_long = can_trade and close > atr_lower and rsi > 45 and adx > adx_threshold and vol_confirmed
entry_short = can_trade and close < atr_upper and rsi < 55 and adx > adx_threshold and vol_confirmed

// *** Webhook Optimizado ***
webhook_url = "https://trading-bot-kv25.onrender.com/trade"
api_secret = "supersecreto123"

sendTrade(order_type, symbol, qty, price, stop_loss, take_profit, trailing_stop) =>
    if strategy.position_size == 0 or strategy.opentrades == 1
        payload = "{\"secret\": \"" + api_secret + 
                  "\", \"order_type\": \"" + order_type + 
                  "\", \"symbol\": \"" + symbol + 
                  "\", \"qty\": \"" + str.tostring(qty) + 
                  "\", \"price\": " + (na(price) ? "null" : str.tostring(price)) + 
                  ", \"stop_loss\": " + (na(stop_loss) ? "null" : str.tostring(stop_loss)) + 
                  ", \"take_profit\": " + (na(take_profit) ? "null" : str.tostring(take_profit)) + 
                  ", \"trailing_stop\": " + (na(trailing_stop) ? "null" : str.tostring(trailing_stop)) + "}"    
    if strategy.position_size != 0
        alert(payload, alert.freq_all)

// *** Lógica de Entrada ***
if entry_long and strategy.position_size == 0
    strategy.entry("Long", strategy.long, qty=final_qty)
    sendTrade("buy", syminfo.ticker, final_qty, 0.0, long_stop_price, long_take_profit, atr_value * trailing_mult)

if entry_short and strategy.position_size == 0
    strategy.entry("Short", strategy.short, qty=final_qty)
    sendTrade("sell", syminfo.ticker, final_qty, 0.0, short_stop_price, short_take_profit, atr_value * trailing_mult)

// *** Salidas con Break-Even ***
if long_break_even
    strategy.exit("Exit Long BE", from_entry="Long", stop=long_stop_price)
    sendTrade("buy", syminfo.ticker, final_qty, 0.0, long_stop_price, long_take_profit, atr_value * trailing_mult)
    long_break_even := false

if short_break_even
    strategy.exit("Exit Short BE", from_entry="Short", stop=short_stop_price)
    sendTrade("sell", syminfo.ticker, final_qty, 0.0, short_stop_price, short_take_profit, atr_value * trailing_mult)
    short_break_even := false

// *** Salidas de Órdenes (Stop Loss y Take Profit) ***
if strategy.position_size > 0
    strategy.exit("Exit Long", from_entry="Long", stop=long_stop_price, limit=long_take_profit)
    sendTrade("buy", syminfo.ticker, final_qty, 0.0, long_stop_price, long_take_profit, atr_value * trailing_mult)

if strategy.position_size < 0
    strategy.exit("Exit Short", from_entry="Short", stop=short_stop_price, limit=short_take_profit)
    sendTrade("sell", syminfo.ticker, final_qty, 0.0, short_stop_price, short_take_profit, atr_value * trailing_mult)
    
// *** Indicadores Visuales ***
plotshape(series=trade_in_high_volume_hours, title="Alta Liquidez", location=location.bottom, color=color.blue, style=shape.triangleup, size=size.auto)