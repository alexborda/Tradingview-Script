//@version=6 
strategy('ATR Trailing Stop', overlay=true)

// *** Cálculo del ATR ***
atr_length = input(14, title='Longitud del ATR')
atr_mult = input(1.2, title='ATR Multiplicador')
atr_value = ta.atr(atr_length)
atr_upper = close + atr_value * atr_mult
atr_lower = close - atr_value * atr_mult
atr_filter_long = close > atr_lower
atr_filter_short = close < atr_upper
volatility_factor = atr_value / close

// *** Cálculo del MACD ***
[macd_line, signal_line, _] = ta.macd(close, 12, 26, 9)
macd_filter_long = macd_line > signal_line
macd_filter_short = macd_line < signal_line
macd_slope = macd_line - macd_line[3] // Diferencia de MACD actual vs hace 3 velas
macd_trend_up = macd_slope > 0
macd_trend_down = macd_slope < 0

// *** Cálculo del ADX Dinámico ***
adx_length = input(14, title='Longitud del ADX')
adx_threshold_base = input(25, title="Umbral Base de ADX")
adx_smoothing = input(14, title="Suavizado ADX")
[diplus, diminus, adx] = ta.dmi(adx_length, adx_smoothing)
adx_threshold = adx_threshold_base * (1 + volatility_factor)  // ADX dinámico dependiendo de la volatilidad

// *** Cálculo del Volumen Relativo ***
vol_length = input(24, title="Longitud del Volumen")
vol_threshold = input(1.1, title="Factor de Volumen Mínimo")
vol_avg = ta.ema(volume, vol_length)  // Media del volumen
vol_relative = volume / vol_avg  // Relación volumen actual/promedio
vol_filter = vol_relative > vol_threshold  // Confirmación de volumen

// *** Gestión de Riesgo ***
margin_percent = input(5, title="Porcentaje de Margen para Operar") / 100  // Ajuste del margen
leverage = input(10, title="Apalancamiento (X)")  // Nivel de apalancamiento
margin_available = strategy.equity * margin_percent  // Margen disponible
adjusted_qty = (margin_available * leverage) / close  // Apalancamiento aplicado a la cantidad
max_exposure = strategy.equity * 0.5  // Máximo 50% del capital total en riesgo
max_qty = math.min(adjusted_qty, max_exposure / close)  // Control del tamaño de la posición

min_asset_qty = input(0.000011, title="Cantidad mínima del activo")  
min_qty = min_asset_qty * close  // Convertimos el mínimo en USDT con el precio actual

// *** Control de Riesgo ***
risk_percent = math.max(math.min(1 / (atr_value * atr_mult), margin_percent), min_qty / strategy.equity)
capital = strategy.equity * risk_percent
final_qty = math.min(math.max(capital / close, min_qty), max_qty)

// *** Cálculo del Trailing Stop, Take Profit y Break-Even ***
var bool long_break_even = false
var bool short_break_even = false
var bool long_trailing_active = false
var bool short_trailing_active = false

var float long_stop_price = na
var float short_stop_price = na
var float long_take_profit = na
var float short_take_profit = na
var float price_entry = nz(strategy.position_avg_price, close)

trailing_mult = input(1.2, title="Trailing Stop Multiplicador")
break_even_mult = input(1.3, title="Break-Even Multiplicador")
take_profit_mult = input(1.8, title="Take Profit Multiplicador")

float tp_factor = adx > adx_threshold ? take_profit_mult * 1.5 : take_profit_mult
float dynamic_trailing_mult = trailing_mult * (1 + volatility_factor)

if strategy.position_size > 0
    price_entry := strategy.position_avg_price
    long_take_profit := price_entry + atr_value * tp_factor * (1 + volatility_factor)

    if not long_break_even and close > price_entry + atr_value * break_even_mult
        long_break_even := true
        long_stop_price := price_entry
        long_trailing_active := true  

    if long_trailing_active
        long_stop_price := math.max(long_stop_price, close - atr_value * dynamic_trailing_mult)

if strategy.position_size < 0
    price_entry := strategy.position_avg_price
    short_take_profit := price_entry - atr_value * tp_factor * (1 + volatility_factor)

    // Activa el Break-Even
    if not short_break_even and close < price_entry - atr_value * break_even_mult
        short_break_even := true
        short_stop_price := price_entry  // Ajusta el stop al punto de entrada
        short_trailing_active := true  // Activa el Trailing Stop dinámico

    // Aplica el Trailing Stop Dinámico después del Break-Even
    if short_trailing_active
        short_stop_price := math.min(short_stop_price, close + atr_value * dynamic_trailing_mult)

// *** Condiciones de Entrada ***
entry_long = macd_trend_up and atr_filter_long and vol_filter and adx > adx_threshold
entry_short = macd_trend_down and atr_filter_short and vol_filter and adx > adx_threshold

// Función para enviar la orden a la API a través del Webhook
webhook_secret = input.string("default_secret", title="API Secret del hebhook")
order_type = input.string("limit", title="Tipo de Orden", options=["limit", "market", "stop_limit", "stop_market"])

// Función para enviar la orden a la API a través del Webhook
sendTrade(secret, symbol, side, order_type, qty, price, stop_loss) =>
    payload = '{"api_key": "' + secret + '", ' +
              '"symbol": "' + symbol + '", ' +
              '"side": "' + side + '", ' +
              '"order_type": "' + order_type + '", ' +
              '"qty": "' + str.tostring(qty) + '", ' +
              '"price": "' + str.tostring(price) + '", ' +
              '"stop_loss": "' + str.tostring(stop_loss) + '"}'
    alert(payload, alert.freq_once_per_bar)

// *** Control de Posiciones y Capital Disponible ***
can_trade = strategy.position_size == 0 and strategy.equity >= min_qty  // No hay posición activa y hay saldo suficiente

// *** Lógica de Entrada con Control de Posiciones ***
if can_trade
    if entry_long
        sendTrade(webhook_secret, syminfo.ticker, "Buy", order_type, final_qty, price_entry, long_stop_price)
        label.new(bar_index, high, "ENTRADA LONG", color=color.green, textcolor=color.white, size=size.auto)
        strategy.entry("Long", strategy.long, qty=final_qty)

    if entry_short
        sendTrade(webhook_secret, syminfo.ticker, "Sell", order_type, final_qty, price_entry, short_stop_price)
        label.new(bar_index, high, "ENTRADA SHORT", color=color.red, textcolor=color.white, size=size.auto)
        strategy.entry("Short", strategy.short, qty=final_qty)

// *** Salidas con Break-Even ***
if long_break_even and strategy.position_size > 0
    strategy.exit("Exit Long BE", from_entry="Long", stop=long_stop_price, limit=long_take_profit)

if short_break_even and strategy.position_size < 0
    strategy.exit("Exit Short BE", from_entry="Short", stop=short_stop_price, limit=short_take_profit)

// *** Salidas de Órdenes con Trailing Stop ***
if strategy.position_size > 0
    strategy.exit("Exit Long", from_entry="Long", stop=long_stop_price, limit=long_take_profit)

if strategy.position_size < 0
    strategy.exit("Exit Short", from_entry="Short", stop=short_stop_price, limit=short_take_profit)